# -*- coding: utf-8 -*-
from sqlite3 import Connection

# Form implementation generated from reading ui file '.\Test_v3_update.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from datetime import datetime
import sqlite3

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(934, 729)
        self.gridLayout = QtWidgets.QGridLayout(Form)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.mainlayout = QtWidgets.QSplitter(Form)
        self.mainlayout.setOrientation(QtCore.Qt.Horizontal)
        self.mainlayout.setHandleWidth(0)
        self.mainlayout.setObjectName("mainlayout")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.mainlayout)
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.layout_records_read = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.layout_records_read.setContentsMargins(0, 0, 0, 0)
        self.layout_records_read.setSpacing(0)
        self.layout_records_read.setObjectName("layout_records_read")
        self.r_add_record = QtWidgets.QPushButton(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Segoe Print")
        font.setPointSize(11)
        self.r_add_record.setFont(font)
        self.r_add_record.setStyleSheet("background-color: chartreuse;\n"
                                        "padding: 20px;\n"
                                        "border-top: 0px;\n"
                                        "border-right: 2px solid black;")
        self.r_add_record.setFlat(False)
        self.r_add_record.setObjectName("r_add_record")
        self.layout_records_read.addWidget(self.r_add_record)
        self.r_table_racords = QtWidgets.QTableWidget(self.verticalLayoutWidget)
        self.r_table_racords.setStyleSheet("border-right: 2px solid black;\n"
                                            "border-top: 0px;")
        self.r_table_racords.setObjectName("r_table_racords")
        self.r_table_racords.setColumnCount(1)
        self.r_table_racords.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Segoe Print")
        font.setPointSize(10)
        item.setFont(font)
        self.r_table_racords.setHorizontalHeaderItem(0, item)
        self.r_table_racords.horizontalHeader().setStretchLastSection(True)
        self.layout_records_read.addWidget(self.r_table_racords)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.mainlayout)
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.layout_records_write = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.layout_records_write.setContentsMargins(0, 0, 0, 0)
        self.layout_records_write.setSpacing(0)
        self.layout_records_write.setObjectName("layout_records_write")
        self.w_head_data = QtWidgets.QHBoxLayout()
        self.w_head_data.setContentsMargins(0, 0, -1, -1)
        self.w_head_data.setSpacing(0)
        self.w_head_data.setObjectName("w_head_data")
        self.w_head = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Segoe Print")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.w_head.setFont(font)
        self.w_head.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.w_head.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.w_head.setStyleSheet("background-color: #FFB47E;\n"
                                    "border: 0px;\n" "padding: 10px;")
        self.w_head.setFrameShadow(QtWidgets.QFrame.Plain)
        self.w_head.setIndent(0)
        self.w_head.setObjectName("w_head")
        self.w_head_data.addWidget(self.w_head)
        self.w_data = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Segoe Print")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.w_data.setFont(font)
        self.w_data.setStyleSheet("border: 0px;\n"
                                    "background-color: #FFB47E;\n"
                                    "padding: 10px;")
        self.w_data.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.w_data.setObjectName("w_data")
        self.w_head_data.addWidget(self.w_data)
        self.layout_records_write.addLayout(self.w_head_data)
        self.w_write_field = QtWidgets.QTextEdit(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Segoe Print")
        font.setPointSize(12)
        self.w_write_field.setFont(font)
        self.w_write_field.setStyleSheet("padding: 20px;\n"
                                            "background-color: #ECF4FF;\n"
                                            "border: 0px;\n"
                                            "border-left: 1px;")
        self.w_write_field.setObjectName("w_write_field")
        self.layout_records_write.addWidget(self.w_write_field)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(-1, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.widget = QtWidgets.QWidget(self.verticalLayoutWidget_2)
        self.widget.setStyleSheet("background-color: #ECF4FF;\n"
                                    "padding:10px;\n"
                                    "margin-right:10px;\n"
                                    "margin-bottom: 10px;")
        self.widget.setObjectName("widget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem)
        self.pushButton_2 = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("Segoe Print")
        font.setPointSize(9)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("background-color: red;\n"
                                            "border-radius: 15px;")
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_3.addWidget(self.pushButton_2)
        self.pushButton = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("Segoe Print")
        font.setPointSize(9)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: chartreuse;\n"
                                        "border-radius: 15px;")
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_3.addWidget(self.pushButton)
        self.horizontalLayout.addWidget(self.widget)
        self.layout_records_write.addLayout(self.horizontalLayout)
        self.gridLayout.addWidget(self.mainlayout, 0, 0, 1, 1)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)
        self.sql = sqlite3.connect('../../TapTapApp/DB.db')
        self.cursor = self.sql.cursor()
        self.new_record_added = True
        self.load_records()


    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.r_add_record.setText(_translate("Form", "Добавить"))
        item = self.r_table_racords.horizontalHeaderItem(0)
        item.setText(_translate("Form", "Записи"))
        self.pushButton_2.setText(_translate("Form", "Удалить"))
        self.pushButton.setText(_translate("Form", "Сохранить"))

        # Connect the button to the slot
        self.r_add_record.clicked.connect(self.add_record)
        self.pushButton_2.clicked.connect(self.delete_record)
        self.r_table_racords.itemSelectionChanged.connect(self.open_note)
        self.pushButton.clicked.connect(self.save_data)
        # self.pushButton.clicked.connect(self.open_note)

    def load_records(self):
        self.cursor.execute("SELECT name_note FROM notes")
        records = self.cursor.fetchall()
        print(records)
        row_count = len(records)
        self.r_table_racords.setRowCount(row_count)
        for row, record in enumerate(records):
            item = QtWidgets.QTableWidgetItem(record[0])
            font = QtGui.QFont()
            font.setFamily("Segoe Print")
            font.setPointSize(10)
            item.setFont(font)
            colors = ["#F183E0", "#EFEA6C", "#FFB47E", "#6875EB"]
            color_index = (row + 1) % len(colors)
            color = colors[color_index]
            item.setBackground(QtGui.QColor(color))
            self.r_table_racords.setItem(row, 0, item)

    # Метод готов, при создании записи, генерирует строку в таблице
    def add_record(self):
        if self.new_record_added:
            _translate = QtCore.QCoreApplication.translate
            self.w_head.setText(_translate("Form", ""))
            self.w_data.setText(_translate("Form", ""))
            row_count = self.r_table_racords.rowCount()
            self.r_table_racords.setRowCount(row_count + 1)
            item = QtWidgets.QTableWidgetItem()
            font = QtGui.QFont()
            font.setFamily("Segoe Print")
            font.setPointSize(10)
            item.setFont(font)
            item.setText("Новая запись")
            colors = ["#F183E0", "#EFEA6C", "#FFB47E", "#6875EB"]
            color_index = (row_count + 1) % len(colors)
            color = colors[color_index]
            item.setBackground(QtGui.QColor(color))
            self.r_table_racords.setItem(row_count, 0, item)
            self.new_record_added = False
            self.r_table_racords.setEnabled(True)
        else:
            QMessageBox.warning(Form, 'Ошибка ввода!', 'Сначала надо сохранить запись!')


    # Добавить удаление записис из БД
    def delete_record(self):
        selected_items = self.r_table_racords.selectedItems()
        if len(selected_items) > 0:
            name_note = self.w_head.text()
            try:
                self.cursor.execute(f'DELETE FROM notes WHERE id_note=0')
                self.sql.commit()
                QMessageBox.information(Form, 'Запись удалена!', 'Операция по удалению записи была успешна выполнена!')
            except Exception as e:
                print(e)
            row = selected_items[0].row()
            self.r_table_racords.removeRow(row)
            self.r_table_racords.setEnabled(True)

    def open_note(self):
        selected_items = self.r_table_racords.selectedItems()
        if len(selected_items) > 0:
            text = selected_items[0].text()
            try:
                self.cursor.execute(f'SELECT text_note, date_note, name_note FROM notes WHERE name_note="{text}"')
            except Exception as e:
                print(e)
            response = self.cursor.fetchone()
            self.w_head.setText(response[2])
            self.w_data.setText(response[1])
            self.w_write_field.setText(response[0])
            self.r_table_racords.setDisabled(True)
        else:
            self.w_head.setText("")

    def save_data(self):
        self.new_record_added = True
        selected_items = self.r_table_racords.selectedItems()
        if len(selected_items) > 0:
            text = selected_items[0].text()
            name_note = self.w_head.text()
            text_note = self.w_write_field.toPlainText()
            date_note = self.w_data.text()
            try:
                self.cursor.execute(f'INSERT INTO notes(id_note, name_note, date_note, text_note) VALUES (3, "{name_note}", "{date_note}", "{text_note}")')
                self.sql.commit()
                QMessageBox.information(Form, 'Запись сохранена!', 'Операция по сохранению записи была успешна выполнена!')
            except Exception as e:
                print(e)
            self.r_table_racords.setEnabled(True)
            # # Сохранение данных в БД SQLite3
            # conn = sqlite3.connect('DB.db')  # Укажите путь и имя вашей БД SQLite3
            # cursor = conn.cursor()
            #
            # # Обновление значения в выбранном столбце
            # cursor.execute("UPDATE YourTableName SET YourColumnName = ?, DateColumn = ? WHERE YourColumnName = ?",
            #                (data, current_date, text))
            #
            # conn.commit()
            # conn.close()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
